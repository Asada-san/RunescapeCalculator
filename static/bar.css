/* div centering element */
.centering {
    text-align: center;
}

/* used to hide a block for button use */
.content {
    display: block;
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.3s ease-out;
}

/* note at the top of the screen */
.note {
    color: var(--textColor1);
    margin: auto;
    margin-top: 20px;
    text-align: left;
    width: 700px;
    box-shadow: var(--note-border);
    background-color: var(--note-bg-color);
    line-height: normal;
    mc-auto-number-format: '{b}Note: {/b}';
    overflow: hidden;
    padding: 0px;
    margin-bottom: 20px;
}

.note-collapsible {
    color: var(--textColor1);
    background-color: var(--note-bg-color);
    width: 700px;
}

.note-button {
    display: inline-block;
    width: 700px;
    height: 30px;
    margin-top: 0px;
    background-color: var(--note-button-bg-color);
    border: 0px;
    color: var(--button-text-color); /* White text */
    cursor: pointer; /* Pointer/hand icon */
    transition: 0.3s;
}

.note-button:hover {
    background-color: var(--note-button-bg-color-hover);
}


/* BUTTON GROUP ELEMENT */
/* a button declared within a btn-group */
.btn-group button {
    display: block;
    margin-top: 20px;
    background-color: var(--button-bg-color);
    border: 1px solid var(--border-color);
    color: var(--button-text-color); /* White text */
    padding: 10px 24px; /* Some padding */
    cursor: pointer; /* Pointer/hand icon */
    transition: 0.3s;
}
/* Clear floats (clearfix hack) */
.btn-group:after {
    content: "";
    clear: both;
    display: table;
}
.btn-group button:not(:last-child) {
    border-right: none; /* Prevent double borders */
}
/* Add a background color on hover */
.btn-group button:hover {
    background-color: var(--button-bg-color-hover);
}
/* changes the default outline when clicking on button */
.btn-group button:focus {
    outline: 0 !important;
    background-color: var(--button-bg-color-hover);
}

/* BOX FOR A SINGLE OPTION! */
.SingleOpt {
    display: block;
    position: relative;
    text-indent: 10px;
    padding-left: 20px;
    margin-bottom: 12px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
/* Hide the browser's default checkbox */
.SingleOpt input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
    font: bold;
}
/* Create a custom checkbox */
.tickbox {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    border: 1px solid black;
    background-color: #eee;
}
/* On mouse-over, add a grey background color */
.SingleOpt:hover input ~ .tickbox {
    background-color: #bbb;
}
/* When the checkbox is checked, add a blue background */
.SingleOpt input:checked ~ .tickbox {
    background-color: var(--button-bg-color);
}
/* Show the checkmark when checked */
.SingleOpt input:checked ~ .tickbox:after {
    display: block;
}

.OptSelect {
    display: inline-block;
}

.OptSelect select {
    text-align: center;
    border: 1px solid black;
    background-color: #eee;
}

/* Hidden placeholder */
.OptSelect option[disabled]:first-child {
    display: none;
}

.OptText {
    display: inline-block;
    margin-left: 15px;
}

.OptText input {
    display: inline-block;
    width: 60px;
    height: 24px;
    text-align: center;
    border: 1px solid black;
    background-color: #eee;
}







/* Revolution Bar */
#RevolutionBar {
  background-color: var(--bar-slot-bg-color);
  width: 876px;
  height: 70px;
  max-width: 1200px;
  margin: auto;
  margin-top: 20px;
  border: 5px solid var(--bar-border-color);
}
.RevoBar {
  display: inline-block;
  float: left;
  width: 62px;
  height: 60px;
  border-left: 1px solid #373737;
  border-right: 1px solid #373737;
}

/* Ability Blocks */
.AbilBlock {
    margin: auto;
    width: 975px; /* 989 */
    height: 300px; /* 314 */
}
.AbilType {
  color: #000000;
  display: flex;
  width: 200px;
  height: 70px;
  justify-content: center;
  align-items: center;
  font-size: '100'px;
  font-family: "Lucida Console", Courier, monospace;
  font-style: bold;
}
/* Attack */
.attbox {
    display: flex;
    flex-direction: row;
    background-color: var(--attColor);
    height: 75px;
    width: 975px;
    border: 2.5px solid var(--attColor);
}
.att {
    width: 70px;
    height: 70px;
    border: 5px solid var(--attColor);
}
/* Strength */
.strbox {
    display: flex;
    flex-direction: row;
    background-color: var(--strColor);
    height: 75px;
    width: 975px;
    border: 2.5px solid var(--strColor);
}
.str {
    width: 70px;
    height: 70px;
    border: 5px solid var(--strColor);
}
/* Magic */
.magbox {
    display: flex;
    flex-direction: row;
    background-color: var(--magColor);
    height: 75px;
    width: 975px;
    border: 2.5px solid var(--magColor);
}
.mag {
    width: 70px;
    height: 70px;
    border: 5px solid var(--magColor);
}
/* Ranged */
.ranbox {
    display: flex;
    flex-direction: row;
    background-color: var(--ranColor);
    height: 75px;
    width: 975px;
    border: 2.5px solid var(--ranColor);
}
.ran {
    width: 70px;
    height: 70px;
    border: 5px solid var(--ranColor);
}
/* Constitution */
.conbox {
    display: flex;
    flex-direction: row;
    background-color: var(--conColor);
    height: 75px;
    width: 975px;
    border: 2.5px solid var(--conColor);
}
.con {
    width: 70px;
    height: 70px;
    border: 5px solid var(--conColor);
}
/* Defence */
.defbox {
    display: flex;
    flex-direction: row;
    background-color: var(--defColor);
    height: 75px;
    width: 975px;
    border: 2.5px solid var(--defColor);
}
.def {
    width: 70px;
    height: 70px;
    border: 5px solid var(--defColor);
}
.Ability {
    transition: 0.05s;
}
/* Expand image when hovering over it */
.Ability:hover{
    border: 0px solid #FFFFFF;
    border-color: 0px solid #FFFFFF;
    box-shadow: 0 0 5px 5px #FFFFFF, 0 0 5px 5px #000000;
    transform: scale(1.1);
    cursor: grab;
}
/* When clicked on the image, go back to normal size */
.Ability:active{
    transform: scale(1);
}


.OptionBlock {
    margin: auto;
    width: 1100px; /* 989 */
    height: 500px; /* 314 */
}


/* Options */
.optsect {
    display: flex;
    flex-direction: column;
    background-color: #D3D3D3;
    float: left;
    margin: auto;
    width: 200px;
    height: 500px;
    color: var(--textColor2);
}

/* Output note */
.outputNote {
    margin: auto;
    margin-top: 10px;
    margin-bottom: 30px;
    width: 600px;
    height: 150px;
    background-color: var(--note-bg-color);
    line-height: normal;
    mc-auto-number-format: '{b}Note: {/b}';
    padding: 12px;
    color: var(--textColor1);
    font-size: 18px;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: var(--note-border);
}

.notecontent {
    display: block;
    overflow: hidden;
    max-height: 0;
    transition: max-height 0s ease-out;
}

/* Output note */
.RotationVerifierNote {
    margin: auto;
    margin-top: 20px;
    margin-bottom: 30px;
    width: 900px;
    background-color: var(--note-bg-color);
    line-height: normal;
    mc-auto-number-format: '{b}Note: {/b}';
    padding: 12px;
    color: var(--textColor1);
    font-size: 18px;
    text-align: center;
    display: flex;
    box-shadow: var(--note-border);
}

#DPT {
    color: var(--textColor);
}

.DPTprintButton:hover {
    cursor: pointer;
    text-decoration: underline;
}

#DPTprint {
    text-align: left;
    margin-left: 10px;
}